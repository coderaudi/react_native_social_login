1. go to firebase and create your application  ( step 11)
2. provide all the details and download the google-service.json
3. add google-service.json to root of andorid/app 
4. go to npm and install npm i @react-native-community/google-signin --save

// npm is depend on the RN vesion 
// how to check RN version got to package .son and check for react-native
// in my case its  "react-native": "0.63.2"
// so which is helpful for me => @react-native-community/google-signin

For RN >= 0.60 please use version 3 installed from @react-native-community/google-signin
For RN <= 0.59 use version 2 installed from react-native-google-signin

// before going to componenet level we need to make some changes depending to andorid

// url to follow => https://github.com/react-native-community/google-signin/blob/HEAD/docs/android-guide.md


5. linking / autolinkin as we are on RN >60 autolinkin is supported 
6. manula linking =>  react-native link react-native-google-signin
7. run the in root cmd =>    react-native link @react-native-community/google-signin

================cmd===cmd===cmd===cmd===cmd========> once you done will get in cmd
 release.
Autolinking documentation: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md
info Linking "@react-native-community/google-signin" iOS dependency
info iOS module "@react-native-community/google-signin" has been successfully linked
info Linking "@react-native-community/google-signin" Android dependency
info Android module "@react-native-community/google-signin" has been successfully linked

C:\audi_\Android\react-native-googlelogin\googlelogin>

================cmd===cmd===cmd===cmd===cmd========> once you done will get in cmd

8. there are few changes in settings.gradle and mainapplication.java done by the linking.

9. Update android/build.gradle with

buildscript {
    ext {
        buildToolsVersion = "27.0.3"
        minSdkVersion = 16
        compileSdkVersion = 27
        targetSdkVersion = 26
        supportLibVersion = "27.1.1"
        googlePlayServicesAuthVersion = "16.0.1" // <--- use this version or newer
    }
...
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2' // <--- use this version or newer
        classpath 'com.google.gms:google-services:4.1.0' // <--- use this version or newer
    }
...
allprojects {
    repositories {
        mavenLocal()
        google() // <--- make sure this is included
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
    }
}



10.  Update android/app/build.gradle with

...
dependencies {

    // impt for google signin 
   //  implementation(project(":react-native-google-signin"))  only when RN <60

    // 
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.android.support:appcompat-v7:23.0.1"
    implementation "com.facebook.react:react-native:+"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0' // <-- add this; newer versions should work too
}

apply plugin: 'com.google.gms.google-services' // <--- this should be the last line


11.  at the time of linking setting.gradle updated so check below lines are there


include ':react-native-google-signin', ':app'
project(':react-native-google-signin').projectDir = new File(rootProject.projectDir, '../node_modules/@react-native-community/google-signin/android')


12. android/app/serc/main/java/MainApplication.java  check the mainapplication.java file 

 // import is there 

import co.apptailor.googlesignin.RNGoogleSigninPackage;


//   new RNGoogleSigninPackage()  
// no need to add in the package because we used react-native link ==> so its addeded by autoliking


// to clean in case error or unable to compile

cd android
./gradlew clean
now react-native run-android



13 . create firebase account


1. visite https://console.firebase.google.com/ 
2. add project / ( your project name)
3. Add Firebase to your Android app ( Get started by adding Firebase to your app click on android icon to generate google-service.json)
4. enter package name -> android/src/main/res/androidMainfest.xml =>
    ( on the top there is package name .=>  com.yourprojectname)


5. to genereate SHA -1 => cd C:\Program Files\Java\jdk1.8.0_121\bin open cmd

6. run this in cmd =>  keytool -list -v -keystore "%USERPROFILE%\.android\debug.keystore" -alias androiddebugkey -storepass android -keypass android    

===cmd====cmd =====cmd

C:\Program Files\Java\jdk1.8.0_171\bin>keytool -list -v -keystore "%USERPROFILE%\.android\debug.keystore" -alias androiddebugkey -storepass android -keypass android
Alias name: androiddebugkey
Creation date: May 5, 2020
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: C=US, O=Android, CN=Android Debug
Issuer: C=US, O=Android, CN=Android Debug
Serial number: 1
Valid from: Tue May 05 12:09:50 IST 2020 until: Thu Apr 28 12:09:50 IST 2050
Certificate fingerprints:
         MD5:  21:8C:CD:7E:4A:89:F7:D1:58:CB:5F:FD:5B:DC:76:66
         SHA1: 92:62:6A:D1:93:73:5B:08:D3:60:AF:00:D7:59:EE:A1:B6:73:12:0F
         SHA256: B3:40:00:BD:21:41:FF:BB:D3:DE:09:CF:91:55:43:72:A2:51:6D:0D:33:CD:F9:32:88:96:EF:97:C3:DB:7E:BA
Signature algorithm name: SHA1withRSA
Subject Public Key Algorithm: 2048-bit RSA key


====cmd====cmd====cmd====cmd



==> tip 1st create the projet and then 
 ==> use clientId : 831416916801-t7hbe5amaja6fej57rmp6es2dg1orgmm.apps.googleusercontent.com

7. enter your SHA-1 


8.In firebase, you will need to enable Google option in SignIn Method section
9. now take the webclientid and past to your google sign in btn 

 we have errr [Error: A non-recoverable sign in failure occurred]


// firebase imps whene error 


errors :;    google login error [Error: A non-recoverable sign in failure occurred]

Solved it !!
I dont know if its a firebase issue. Spent almost two days for this simple issue.
ADDED THE SUPPORT EMAIL ON FIREBASE AND IT STARTED WORKING
Firebase or the responsible authority should be informed about this. This is a major thing and it should be solved. It is nowhere mentioned on the documentation. If this could be added

 at troubleshooting info it could save time of many others.

 steps to solve =>
 -Go to console.developer.google.com
-Select the project.
-Go to Credentials.
-Switch to O Auth Consent screen.
-Change the app name and fill email id (optional)
-Save at the bottom
-Try logging in now and it should work.

this solution from stackoverflow worked for me.


Enable OAuth on https://console.developers.google.com
Copy and paste your SH1 while enabling
Enable Google sign in on firebase authentication
Use Oauth Client_Id instead of your WebClient ID














// solution if firebase is already is added in your project


GOOGLE SIGN IN WITH FIREBASE 

VIDEO LINK TO LOGIN WITH GOOGLE IN REACT-NATIVE : https://youtu.be/SdYp5JdMvs0
BLOG LINK TO : https://www.pradipdebnath.com/2020/10/06/how-to-implement-google-login-in-react-native-with-firebase/










Google signin 



1. install the react native npm -->  npm i @react-native-community/google-signin --save

2. firebare -- SHA certificate fingerprints  -->

 if you have fresh project and debug.keystore file in not there in android/app the create new file with running the below command for windows 
 
in  user/java/jdk***/bin  --> open the cmd and run the command
 cmd ===> keytool -genkey -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android -keyalg RSA -validity 10000


if file is already present then you have to go android/app folder in your project and run the following command 

 cmd ==> keytool -keystore debug.keystore -list -v
  // it will ask you password if you dont know the password then go to the  andorid/app/build.gradle
  
signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

-===================
now pickk up the sha1 key and add to firebase account 
donwnload the google-service.json file and add to android/app root 

open google-service.json {
          "client_id": "************-****************q59ek27u79n.apps.googleusercontent.com",
          "client_type": 3
        }
file cient_id ( use this one for   ==> 

GoogleSignin.configure({
      scopes: ['https://www.googleapis.com/auth/userinfo.profile'], // what API you want to access on behalf of the user, default is email and profile
      webClientId: '************-****************59ek27u79n.apps.googleusercontent.com', // client ID of type WEB for your server (needed to verify user ID and offline access)
      offlineAccess: true
})



// if you are getting the error like  DEVELOPER_ERROR 

 1. solution 

step 1 : go to https://console.cloud.google.com/  --> sidemenu and select  credentials --> and check 

Client ID
************-****************59ek27u79n.apps.googleusercontent.com
Client secret
MswP-************66jQJ
Creation date
July 6, 2020 at 11:44:13 AM GMT+5

------------------> then go to firebase console  

 a> https://console.firebase.google.com/ --> sidemenu // Authentication -> SignMethod ->  Google -> check for
Web SDK configuration
Web client ID : "**************-*****************.apps.googleusercontent.com"
Web client secret: "*************" 

both are the same or not 

check your google-sign in button configuration code where the google  webCient id is same or not

 GoogleSignin.configure({
      scopes: ['https://www.googleapis.com/auth/userinfo.profile'], // what API you want to access on behalf of the user, default is email and profile
      webClientId: '***************-**********************.apps.googleusercontent.com', // client ID of type WEB for your server (needed to verify user ID and offline access)
      offlineAccess: true, // if you want to access Google API on behalf of the user FROM YOUR SERVER
      hostedDomain: '', // specifies a hosted domain restriction
      loginHint: '', // [iOS] The user's ID, or email address, to be prefilled in the authentication UI if possible. [See docs here](https://developers.google.com/identity/sign-in/ios/api/interface_g_i_d_sign_in.html#a0a68c7504c31ab0b728432565f6e33fd)
      forceCodeForRefreshToken: true, // [Android] related to `serverAuthCode`, read the docs link below *.
      accountName: '', // [Android] specifies an account name on the device that should be used
      iosClientId: '<FROM DEVELOPER CONSOLE>', // [iOS] optional, if you want to specify the client ID of type iOS (otherwise, it is taken from GoogleService-Info.plist)
    });

// if the web client id are not same the


if its not same  then you have to check with your keystore 








